(VAR Pattern C R Cols Rows X v6 Y InfSnake Snake S A T v13 v14 v15 Part Tail NewInfSnake RestSnake v20 Ring Rings RestRings v24 Line Lines Line1 List Reversed Head SoFar)
(RULES
  coil_it_in(cons(Line,Lines),even) -> u_13(reverse2_in(Line,Line1),Line,Lines)
  coil_it_in(cons(Line,Lines),odd) -> u_12(coil_it_in(Lines,even),Line,Lines)
  coil_it_in(nil,v24) -> coil_it_out(nil,v24)
  infinite_snake_in(cons(A,R),cons(A,T),S) -> u_8(infinite_snake_in(R,T,S),R,S,gen_null,T)
  infinite_snake_in(nil,S,S) -> infinite_snake_out(nil,S,S)
  part_of_snake_in(cons(v20,R),cons(Ring,Rings),RestSnake,cons(Ring,RestRings)) -> u_11(part_of_snake_in(R,Rings,RestSnake,RestRings),R,RestSnake,v20,Ring,Rings,RestRings)
  part_of_snake_in(nil,RestSnake,RestSnake,nil) -> part_of_snake_out(nil,RestSnake,RestSnake,nil)
  produce_snake_in(cons(v15,Rows),Cols,InfSnake,cons(Part,Tail)) -> u_9(part_of_snake_in(Cols,InfSnake,NewInfSnake,Part),Cols,Rows,InfSnake,gen_null,gen_null,Tail)
  produce_snake_in(nil,v13,v14,nil) -> produce_snake_out(nil,v13,v14,nil)
  reverse_in(cons(Head,Tail),SoFar,Reversed) -> u_16(reverse_in(Tail,cons(Head,SoFar),Reversed),Tail,Reversed,Head,SoFar)
  reverse_in(nil,Reversed,Reversed) -> reverse_out(nil,Reversed,Reversed)
  reverse2_in(List,Reversed) -> u_15(reverse_in(List,nil,Reversed),List,Reversed)
  s2l_in(0,nil) -> s2l_out(0,nil)
  s2l_in(s(X),cons(v6,Y)) -> u_4(s2l_in(X,Y),X,gen_null,Y)
  snake_in(Pattern,Cols,Rows) -> u_5(infinite_snake_in(Pattern,InfSnake,InfSnake),Pattern,Cols,Rows)
  test_snake_in(Pattern,C,R) -> u_1(s2l_in(C,Cols),Pattern,C,R)
  u_1(s2l_out(C,Cols),Pattern,C,R) -> u_2(s2l_in(R,Rows),Pattern,C,R,Cols)
  u_2(s2l_out(R,Rows),Pattern,C,R,Cols) -> u_3(snake_in(Pattern,Cols,Rows),Pattern,C,R,Cols,Rows)
  u_3(snake_out(Pattern,Cols,Rows),Pattern,C,R,Cols,Rows) -> test_snake_out(Pattern,C,R)
  u_4(s2l_out(X,Y),X,v6,Y) -> s2l_out(s(X),cons(gen_null,Y))
  u_5(infinite_snake_out(Pattern,InfSnake,InfSnake),Pattern,Cols,Rows) -> u_6(produce_snake_in(Rows,Cols,InfSnake,Snake),Pattern,Cols,Rows,InfSnake)
  u_6(produce_snake_out(Rows,Cols,InfSnake,Snake),Pattern,Cols,Rows,InfSnake) -> u_7(coil_it_in(Snake,odd),Pattern,Cols,Rows,InfSnake,Snake)
  u_7(coil_it_out(Snake,odd),Pattern,Cols,Rows,InfSnake,Snake) -> snake_out(Pattern,Cols,Rows)
  u_8(infinite_snake_out(R,T,S),R,S,A,T) -> infinite_snake_out(cons(gen_null,R),cons(gen_null,T),S)
  u_9(part_of_snake_out(Cols,InfSnake,NewInfSnake,Part),Cols,Rows,InfSnake,v15,Part,Tail) -> u_10(produce_snake_in(Rows,Cols,NewInfSnake,Tail),Cols,Rows,InfSnake,gen_null,gen_null,Tail,NewInfSnake)
  u_10(produce_snake_out(Rows,Cols,NewInfSnake,Tail),Cols,Rows,InfSnake,v15,Part,Tail,NewInfSnake) -> produce_snake_out(cons(v15,Rows),Cols,InfSnake,cons(Part,Tail))
  u_11(part_of_snake_out(R,Rings,RestSnake,RestRings),R,RestSnake,v20,Ring,Rings,RestRings) -> part_of_snake_out(cons(v20,R),cons(Ring,Rings),RestSnake,cons(Ring,RestRings))
  u_12(coil_it_out(Lines,even),Line,Lines) -> coil_it_out(cons(Line,Lines),odd)
  u_13(reverse2_out(Line,Line1),Line,Lines) -> u_14(coil_it_in(Lines,odd),Line,Lines,Line1)
  u_14(coil_it_out(Lines,odd),Line,Lines,Line1) -> coil_it_out(cons(Line,Lines),even)
  u_15(reverse_out(List,nil,Reversed),List,Reversed) -> reverse2_out(List,Reversed)
  u_16(reverse_out(Tail,cons(Head,SoFar),Reversed),Tail,Reversed,Head,SoFar) -> reverse_out(cons(Head,Tail),SoFar,Reversed)
  gen_null -> null)
(STRATEGY NARROWING)
(STRATEGY GOAL test_snake_in(b, b, b))