name:                narradar
build-type:          Simple
cabal-version:       >= 1.2
version:             0.2.20090610
synopsis:            A termination of Narrowing prover
description:         A termination of Narrowing prover
category:            Math
license:             BSD3
license-file:        LICENSE
author:              Pepe Iborra
maintainer:          pepeiborra@gmail.com
data-files:          aproveStrats/*.strategy
extra-source-files:  prelude.pl
source-repository head
  type:     git
  location: git://github.com/pepeiborra/narradar.git


Flag base4
   default: True
Flag web
   default: False
Flag debug
   default: False
Flag hood
   default: False
Flag transformers
   default: False

Library
  if flag(base4)
     cpp-options: -DBASE4
     build-depends:     base >= 4
  else
     build-depends:     base < 4
  if flag(debug)
     cpp-options: -DDEBUG
  if flag(hood)
     cpp-options: -DHOOD
     build-depends: GHood
  if flag(transformers)
     build-depends: transformers, monads-fd
  else
     build-depends: mtl
  buildable: True
--  cpp-options: -DGHCI
  ghc-prof-options: -auto
  hs-source-dirs: src
  build-Depends: base, pretty, containers, process, directory, bytestring, array,
     xhtml, tagsoup, curl, derive, cgi, stm, network, filepath, dotgen, parallel, strict,
     term, TRSParser, parsec, prolog >= 0.1.20090305, prolog-tools, unix, template-haskell,
     control-monad-free >= 0.4.1,logict, rmonad, alacarte
  exposed-modules:
     Narradar,
     Narradar.Solver,
     Narradar.Constraints.Unify,
     Narradar.Constraints.VariableCondition
     Narradar.Framework.Proof,
     Narradar.Framework.Output,
     Narradar.Framework.GraphViz,
     Narradar.Types,
     Narradar.Types.ArgumentFiltering,
     Narradar.Types.DPIdentifiers,
     Narradar.Types.DPairs,
     Narradar.Types.Goal,
     Narradar.Types.Labellings,
     Narradar.Types.Problem
     Narradar.Types.ProblemType,
     Narradar.Types.PrologIdentifiers
     Narradar.Types.Term,
     Narradar.Types.TRS,
     Narradar.Types.Var,
     Narradar.Processor.Aprove,
     Narradar.Processor.ExtraVars,
     Narradar.Processor.Graph,
     Narradar.Processor.GraphTransformation,
     Narradar.Processor.NarrowingProblem,
     Narradar.Processor.PrologProblem,
     Narradar.Processor.RewritingProblem,
     Narradar.Processor.ReductionPair
     Narradar.Processor.UsableRules,
     Narradar.Utils.Convert,
     Narradar.Utils.Ppr,
     Narradar.Utils,
     Control.Monad.Free.Narradar,
     Control.Monad.Supply
  other-modules:
     Lattice,
     Paths_narradar
     Text.ParserCombinators.Parsec.Tag

Executable narradar
  buildable: False
  if flag(base4)
     cpp-options: -DBASE4
     build-depends:     base >= 4
  else
     build-depends:     base < 4
  if flag(debug)
     cpp-options: -DDEBUG -DHOOD
     build-depends: GHood
  main-is:             Main.hs
  ghc-options:         
  hs-source-dirs:         src


Executable narradarCgi
  if flag(web)
    buildable: True
  else
    buildable: False
  if flag(base4)
    cpp-options:       -DBASE4
    build-depends:     base >= 4
  else
    build-depends:     base < 4

  main-is:             MainWeb.hs
  ghc-options:         -O2 -threaded
  hs-source-dirs:      src
  build-Depends:       

  other-modules:

